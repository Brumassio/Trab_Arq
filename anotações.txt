# salve professor Felippe Fernandes  da Silva ! <3
# é us guri do python

#simulador do ciclo de instrução do computador.
# 1) Entrada de dados
# 2) ULA
    # 2.1) AC, MQ
# 3) UC
    # 3.1) MBR, MAR, IBR, IR, PC

# 4 bits para o opcode e 8 bits de referência dos operandos.
# ULA deve-se tratar overflow,
# valores negativos e positivos e realizar os cálculos necessários, além de
# outros registradores.

# Como implementar memória
# Como declarar var em Bits
# opcode e operando

# quer que limita as variaveis? 
# quer que implemente as operações?  Sim
# implementar memoria? Sim


#Testar negativos na Multiplicação e Pipeline
#Tratar raw ararar wrawrwa r
#Printar os registradores e variaveis e processos




#0100 Soma
#0101 Subtração
#0010 Divisão
#0001 Multiplicação

# for i in range(len(n1)):
#     aux2 = int(n1[-(i+1)]) ^ int(n2[-(i+1)]) ^ carryin
#     resultado += str(int(aux2))
#     if ((int(n1[-(i+1)]) + int(n2[-(i+1)]))==2) or ((int(n1[-(i+1)]) ^ int(n2[-(i+1)]))==1 and carryin==1):
#           carryin=1
#     else:
#         carryin=0
# resultado += str(carryin)        
# print(resultado[::-1]) 


from tools import *

def divisao(num, den):
   resultado=""
   cond=0
   aux=transformarNegativo(complementoDois(den))
   used=len(den)
   resto=soma(complementoDois(num[:used]), aux)
   if(int(resto[1:],2)!=0):
      resto=resto[(resto[1:].find("1")+1):]
      cond=int(resto,2)
   else:
      resto=""
      cond=0
   resultado+="1"

   while (cond>=0):
      if((len(num)-used)>0):
         if((len(num)-used)+len(resto)>=len(den)):
            used+=1
            resto+=num[used-1]
            if(len(resto)==len(den)):
               resto=soma(complementoDois(resto), aux)
               if(int(resto[1:],2)!=0):
                  resto=resto[(resto[1:].find("1")+1):]
                  cond=int(resto,2)
               else:
                  resto=""
                  cond=0
               resultado+="1"
            else:
               resultado+="0"
         else:
            resultado+="0"
            used+=1
      else:
        cond=-1

   print(resultado)
         
   